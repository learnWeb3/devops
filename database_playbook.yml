---
- hosts: database
  gather_facts: false
  become: true
  pre_tasks:
    - name: "Make sure remote system is initialized correctly"
      raw: "ln -s /usr/bin/python3 /usr/bin/python"
      register: set_symlink
      failed_when: set_symlink.rc != 0 and set_symlink.rc != 1

  roles:
    - role: initialize

  tasks:
    - name: install software-properties-common
      apt:
        name: software-properties-common
        state: latest

    - name: install pip3
      apt: name=python3-pip state=present

    - name: Make sure pymysql is present
      become: true
      pip:
        name: pymysql
        state: present

    - name: install mysql-server
      apt:
        name: mysql-server
        state: present

    - name: Make mysql server accessible from external hosts
      shell: grep -q "bind-address = 0.0.0.0" /etc/mysql/mysql.conf.d/mysql.cnf; [ $? -eq 0 ] &&  echo "already present" || echo "bind-address = 0.0.0.0" >> /etc/mysql/mysql.conf.d/mysql.cnf

    - name: Start service mysql, if not started
      ansible.builtin.service:
        name: mysql
        state: started

    - name: Create mysql user if not exists
      shell: mysql -u root -e 'CREATE USER IF NOT EXISTS "admin"@"%" IDENTIFIED WITH mysql_native_password BY "foobar";'

    - name: Grant all privileges to admin user
      shell: mysql -u root -e 'GRANT ALL PRIVILEGES ON *.* TO "admin"@"%" WITH GRANT OPTION;'

    - name: Flush privileges
      shell: mysql -u root -e 'FLUSH PRIVILEGES;'

    - name: Create database
      shell: mysql -u root -e "CREATE DATABASE IF NOT EXISTS {{ database_name }} CHARACTER SET {{ database_charset }} COLLATE {{ database_collation }};"
