stages:
  - test
  - deploy

variables:
  BACK_PROJECT_DIR: "${CI_PROJECT_DIR}/app/back"
  FRONT_PROJECT_DIR: "${CI_PROJECT_DIR}/app/front"

test-back:
  stage: test
  image: php:7.4
  variables:
    MYSQL_DATABASE: nsa_back
    MYSQL_ROOT_PASSWORD: secret
  services:
    - mysql:latest
  before_script:
    # Update packages
    - apt-get update -yqq
    # Prep for Node
    - apt-get install gnupg -yqq
    # Upgrade to Node 8
    - curl -sL https://deb.nodesource.com/setup_16.x | bash -
    # Install dependencies
    - apt-get install zip git nodejs libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev -yqq libonig-dev libzip-dev
    # Install php extensions
    - docker-php-ext-install mbstring json pdo_mysql curl intl gd xml zip bz2 opcache
    # Install Composer and project dependencies.
    - curl -sS https://getcomposer.org/installer | php
    - mv composer.phar /usr/local/bin/composer
    - cd "${BACK_PROJECT_DIR}" && composer install
    - cd "${BACK_PROJECT_DIR}" && composer update
    # Install Node dependencies.
    # comment this out if you don't have a node dependency
    - cd "${BACK_PROJECT_DIR}" && npm install
    # Copy over testing configuration.
    - cd "${BACK_PROJECT_DIR}" && cp .env.testing .env
    - cat "${BACK_PROJECT_DIR}"/.env
    # Generate an application key. Re-cache.
    - cd "${BACK_PROJECT_DIR}" && php artisan key:generate
    - cd "${BACK_PROJECT_DIR}" && php artisan config:cache
    # Run database migrations.
    - cd "${BACK_PROJECT_DIR}" && php artisan migrate
    # Run database seed
    - cd "${BACK_PROJECT_DIR}" && php artisan db:seed
  script:
    # run laravel tests
    - cd "${BACK_PROJECT_DIR}" && php vendor/bin/phpunit --coverage-text --colors=never

test-front:
  stage: test
  image: node:12-alpine
  before_script:
    - apk add --no-cache python2 g++ make
    - apk add chromium
    - apk add chromium-chromedriver
    - export CHROME_BIN=/usr/bin/chromium-browser 
    - cd "${FRONT_PROJECT_DIR}" && npm i --no-audit --loglevel verbose
  script:
    - cd "${FRONT_PROJECT_DIR}" && npm run test

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
