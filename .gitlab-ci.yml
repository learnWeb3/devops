stages:
  - test
  - deploy

image: php:latest
services:
  - mysql:latest

variables:
  MYSQL_DATABASE: nsa_back
  MYSQL_ROOT_PASSWORD: secret

# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
cache:
  paths:
    - vendor/
    - node_modules/
before_script:
  # Update packages
  - apt-get update -yqq
  # Prep for Node
  - apt-get install gnupg -yqq
  # Upgrade to Node 8
  - curl -sL https://deb.nodesource.com/setup_8.x | bash -
  # Install dependencies
  - apt-get install git nodejs libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev -yqq
  # Install php extensions
  - docker-php-ext-install mbstring pdo_mysql curl json intl gd xml zip bz2 opcache
  # Install & enable Xdebug for code coverage reports
  - pecl install xdebug
  - docker-php-ext-enable xdebug
  # Install Composer and project dependencies.
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  # Install Node dependencies.
  # comment this out if you don't have a node dependency
  - npm install
  # Copy over testing configuration.
  - cd /app/back
  - cp .env.testing .env
  # Generate an application key. Re-cache.
  - php artisan key:generate
  - php artisan config:cache
  # Run database migrations.
  - php artisan migrate
  # Run database seed
  - php artisan db:seed

test:
  stage: test
  script:
    # run laravel tests
    - cd /app/back
    - php vendor/bin/phpunit --coverage-text --colors=never --env=testing

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
