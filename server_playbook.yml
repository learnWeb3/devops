---
- hosts: backend
  gather_facts: false
  become: true
  pre_tasks:
    - name: "Make sure remote system is initialized correctly"
      raw: "ln -s /usr/bin/python3 /usr/bin/python"
      register: set_symlink
      failed_when: set_symlink.rc != 0 and set_symlink.rc != 1

  tasks:
    - name: update repository index
      apt:
        update_cache: true

    - name: Upgrade all apt packages
      apt: upgrade=dist force_apt_get=yes

    - name: install software-properties-common
      apt:
        name: software-properties-common
        state: latest

    - name: Add ppa:ondrej/php repository into sources list
      ansible.builtin.apt_repository:
        repo: ppa:ondrej/php

    - name: update repository index
      apt:
        update_cache: true

    - name: install php7.4
      apt:
        name: php7.4

    - name: install curl
      apt:
        name: curl

    - name: install php-curl
      apt:
        name: php7.4-curl

    - name: install mbstring
      apt:
        name: php-mbstring

    - name: install php-xml
      apt:
        name: php-xml

    - name: install php-json
      apt:
        name: php-json

    - name: install php-zip
      apt:
        name: php-zip

    - name: Download and install Composer
      shell: curl -sS https://getcomposer.org/installer | php
      args:
        chdir: /usr/src/
        creates: /usr/local/bin/composer
      become: true

    - name: Add Composer to global path
      copy:
        src: /usr/src/composer.phar
        dest: /usr/local/bin/composer
        remote_src: true
        group: root
        mode: "0755"
        owner: root
      become: true

    - name: copying backend project files
      become: true
      copy:
        src: "{{ project_dir }}"
        dest: /app/
        group: "{{ vms_remote_user }}"
        owner: "{{ vms_remote_user }}"
        mode: "0755"

    - name: Installing php project dependencies
      become: true
      become_user: "{{ vms_remote_user }}"
      shell: cd /app/back && composer install

    - name: Updating php project dependencies (composer.lock file)
      become: true
      become_user: "{{ vms_remote_user }}"
      shell: cd /app/back && composer update

    # - name: Installing Node JS dependencies
    #   shell: cd /app/back && npm install

    - name: Copy over environnement variables.
      become: true
      become_user: "{{ vms_remote_user }}"
      shell: cd /app/back && cp .env.example .env

    - name: Generate an application key.
      become: true
      become_user: "{{ vms_remote_user }}"
      shell: cd /app/back && php artisan key:generate

    - name: Re-cache.
      become: true
      become_user: "{{ vms_remote_user }}"
      shell: cd /app/back && php artisan config:cache

    - name: Run database migrations.
      become: true
      become_user: "{{ vms_remote_user }}"
      shell: cd /app/back && php artisan migrate

    - name: Run database seed
      become: true
      become_user: "{{ vms_remote_user }}"
      shell: cd /app/back && php artisan db:seed
